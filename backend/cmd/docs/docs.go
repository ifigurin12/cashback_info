// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/banks": {
            "get": {
                "description": "Возвращает список банков",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banks"
                ],
                "summary": "Получение списка банков",
                "responses": {
                    "200": {
                        "description": "Список банков",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/bank.Bank"
                            }
                        }
                    }
                }
            }
        },
        "/cards": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Вернет список кард, по идентификатору пользователя из токена",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Card"
                ],
                "summary": "Список карт пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/card.Card"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создает новую карту",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Card"
                ],
                "summary": "Создает новую карту\tпользователя",
                "parameters": [
                    {
                        "description": "Create Card Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateCardRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.CreateCardResponse"
                        }
                    }
                }
            }
        },
        "/cards/:id": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет карту",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Card"
                ],
                "summary": "Удалить карту по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/cards/{id}/cashback": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает данные пользователя по указанному ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cashback"
                ],
                "summary": "Обновление категорий для карты по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create Cashbacks Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateCashbacksRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает 201 в случае успеха",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cashback"
                ],
                "summary": "Создание категорий для карты по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create Cashbacks Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateCashbacksRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Возвращает список категорий для указанного банка",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Получение списка категорий",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bank ID",
                        "name": "bank-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/category.Category"
                            }
                        }
                    }
                }
            }
        },
        "/email/login": {
            "post": {
                "description": "Возвращает токен и время истечения при успешной аутентификации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Аутентификация пользователя по электронной почте",
                "parameters": [
                    {
                        "description": "Email and password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.EmailLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.Token"
                        }
                    }
                }
            }
        },
        "/families": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создание семьи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Family"
                ],
                "summary": "Создание семьи",
                "parameters": [
                    {
                        "description": "Create family Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateFamilyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/family.Family"
                        }
                    }
                }
            }
        },
        "/families/invites": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение приглашений либо по family-id либо по id из Authorization header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Family-Invite"
                ],
                "summary": "Получение приглашений",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Family ID",
                        "name": "family-id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/families/{family-id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение семьи по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Family"
                ],
                "summary": "Получение семьи",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Family ID",
                        "name": "family-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/family.Family"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаление семьи по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Family"
                ],
                "summary": "Удаление семьи",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Family ID",
                        "name": "family-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/families/{family-id}/invites": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создание приглашения в семью",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Family-Invite"
                ],
                "summary": "Создание приглашения в семью",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateFamilyInviteRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Family ID",
                        "name": "family-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/families/{family-id}/invites/accept": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Принятие приглашения добавляет юзера в семью",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Family-Invite"
                ],
                "summary": "Принятие приглашения",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Family ID",
                        "name": "family-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/families/{family-id}/invites/decline": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет приглашение",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Family-Invite"
                ],
                "summary": "Отклонение приглашения",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Family ID",
                        "name": "family-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/families/{family-id}/invites/{invite-id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаление приглашения, будет успешным только для лидера семьи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Family-Invite"
                ],
                "summary": "Удаление приглашения",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Family ID",
                        "name": "family-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Invite ID",
                        "name": "invite-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/families/{family-id}/members/{member-id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаление члена семьи по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Family"
                ],
                "summary": "Удаление члена семьи",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Family ID",
                        "name": "family-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "member-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Создает нового пользователя и возвращает код",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Создание нового пользователя",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Возвращает данные пользователя по указанному ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Получение пользователя по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.CreateCardRequest": {
            "type": "object",
            "required": [
                "bank_id",
                "title"
            ],
            "properties": {
                "bank_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.CreateCardResponse": {
            "type": "object",
            "required": [
                "card_id"
            ],
            "properties": {
                "card_id": {
                    "type": "string"
                }
            }
        },
        "api.CreateCashbacksRequest": {
            "type": "object",
            "required": [
                "cashbacks",
                "category_ids"
            ],
            "properties": {
                "cashbacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cashback.Cashback"
                    }
                },
                "category_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.CreateFamilyInviteRequest": {
            "type": "object",
            "required": [
                "invitee_id"
            ],
            "properties": {
                "invitee_id": {
                    "type": "string"
                }
            }
        },
        "api.CreateFamilyRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "api.UpdateCashbacksRequest": {
            "type": "object",
            "required": [
                "cashbacks",
                "category_ids"
            ],
            "properties": {
                "cashbacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cashback.Cashback"
                    }
                },
                "category_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "bank.Bank": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "card.Card": {
            "type": "object",
            "required": [
                "categories",
                "id",
                "last_updated_at",
                "title"
            ],
            "properties": {
                "bank": {
                    "$ref": "#/definitions/bank.Bank"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/category.CategoryWithCashback"
                    }
                },
                "id": {
                    "type": "string"
                },
                "last_updated_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "cashback.Cashback": {
            "type": "object",
            "required": [
                "cashback_percentage"
            ],
            "properties": {
                "cashback_limit": {
                    "type": "integer"
                },
                "cashback_percentage": {
                    "type": "number"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "category.Category": {
            "type": "object",
            "required": [
                "id",
                "mcc_codes",
                "source",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mcc_codes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcc.MCC"
                    }
                },
                "source": {
                    "$ref": "#/definitions/category.Source"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "category.CategoryWithCashback": {
            "type": "object",
            "required": [
                "cashback_percentage",
                "id",
                "mcc_codes",
                "source",
                "title"
            ],
            "properties": {
                "cashback_limit": {
                    "type": "integer"
                },
                "cashback_percentage": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mcc_codes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mcc.MCC"
                    }
                },
                "source": {
                    "$ref": "#/definitions/category.Source"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "category.Source": {
            "type": "string",
            "enum": [
                "user",
                "bank"
            ],
            "x-enum-varnames": [
                "SourceUser",
                "SourceBank"
            ]
        },
        "family.Family": {
            "type": "object",
            "required": [
                "id",
                "leader",
                "members",
                "title"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "leader": {
                    "$ref": "#/definitions/user.User"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.User"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "mcc.MCC": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "login",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "request.EmailLoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.RoleType": {
            "type": "string",
            "enum": [
                "default",
                "admin"
            ],
            "x-enum-varnames": [
                "Default",
                "Admin"
            ]
        },
        "user.Token": {
            "type": "object",
            "required": [
                "expiration_time",
                "token",
                "user_id"
            ],
            "properties": {
                "expiration_time": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "required": [
                "email",
                "id",
                "login",
                "role_type"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role_type": {
                    "$ref": "#/definitions/user.RoleType"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Cashback-info API",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Cashback-info API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
