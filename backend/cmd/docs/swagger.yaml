definitions:
  api.CreateCardRequest:
    properties:
      bank_id:
        type: integer
      title:
        type: string
    required:
    - bank_id
    - title
    type: object
  api.CreateCardResponse:
    properties:
      card_id:
        type: string
    required:
    - card_id
    type: object
  api.CreateCashbacksRequest:
    properties:
      cashbacks:
        items:
          $ref: '#/definitions/cashback.Cashback'
        type: array
      category_ids:
        items:
          type: string
        type: array
    required:
    - cashbacks
    - category_ids
    type: object
  api.CreateFamilyInviteRequest:
    properties:
      invitee_id:
        type: string
    required:
    - invitee_id
    type: object
  api.CreateFamilyRequest:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  api.ListCardsResponse:
    properties:
      family_cards:
        items:
          $ref: '#/definitions/card.Card'
        type: array
      user_cards:
        items:
          $ref: '#/definitions/card.Card'
        type: array
    required:
    - family_cards
    - user_cards
    type: object
  api.UpdateCashbacksRequest:
    properties:
      cashbacks:
        items:
          $ref: '#/definitions/cashback.Cashback'
        type: array
      category_ids:
        items:
          type: string
        type: array
    required:
    - cashbacks
    - category_ids
    type: object
  bank.Bank:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  card.Card:
    properties:
      bank:
        $ref: '#/definitions/bank.Bank'
      categories:
        items:
          $ref: '#/definitions/category.CategoryWithCashback'
        type: array
      id:
        type: string
      last_updated_at:
        type: string
      title:
        type: string
    required:
    - categories
    - id
    - last_updated_at
    - title
    type: object
  cashback.Cashback:
    properties:
      end_date:
        type: string
      limit:
        type: integer
      percentage:
        type: number
      start_date:
        type: string
    required:
    - percentage
    type: object
  category.Category:
    properties:
      description:
        type: string
      id:
        type: string
      mcc_codes:
        items:
          $ref: '#/definitions/mcc.MCC'
        type: array
      source:
        $ref: '#/definitions/category.Source'
      title:
        type: string
    required:
    - id
    - mcc_codes
    - source
    - title
    type: object
  category.CategoryWithCashback:
    properties:
      cashback:
        $ref: '#/definitions/cashback.Cashback'
      category:
        $ref: '#/definitions/category.Category'
    required:
    - cashback
    - category
    type: object
  category.Source:
    enum:
    - user
    - bank
    type: string
    x-enum-varnames:
    - SourceUser
    - SourceBank
  family.Family:
    properties:
      id:
        type: string
      leader:
        $ref: '#/definitions/user.User'
      members:
        items:
          $ref: '#/definitions/user.User'
        type: array
      title:
        type: string
    required:
    - id
    - leader
    - members
    - title
    type: object
  invite.FamilyInvite:
    properties:
      family:
        $ref: '#/definitions/family.Family'
      id:
        type: string
      user:
        $ref: '#/definitions/user.User'
    required:
    - family
    - id
    - user
    type: object
  mcc.MCC:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  request.CreateUserRequest:
    properties:
      email:
        type: string
      login:
        type: string
      password:
        type: string
      phone:
        type: string
    required:
    - email
    - login
    - password
    type: object
  request.EmailLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  user.RoleType:
    enum:
    - default
    - admin
    type: string
    x-enum-varnames:
    - Default
    - Admin
  user.Token:
    properties:
      expiration_time:
        type: string
      token:
        type: string
      user_id:
        type: string
    required:
    - expiration_time
    - token
    - user_id
    type: object
  user.User:
    properties:
      email:
        type: string
      id:
        type: string
      login:
        type: string
      phone:
        type: string
      role_type:
        $ref: '#/definitions/user.RoleType'
    required:
    - email
    - id
    - login
    - role_type
    type: object
info:
  contact: {}
  title: Cashback-info API
  version: "1.0"
paths:
  /banks:
    get:
      description: Возвращает список банков
      produces:
      - application/json
      responses:
        "200":
          description: Список банков
          schema:
            items:
              $ref: '#/definitions/bank.Bank'
            type: array
      summary: Получение списка банков
      tags:
      - Banks
  /cards:
    get:
      description: Вернет список кард, по идентификатору пользователя из токена
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ListCardsResponse'
      security:
      - BearerAuth: []
      summary: Список карт пользователя
      tags:
      - Card
    post:
      consumes:
      - application/json
      description: Создает новую карту
      parameters:
      - description: Create Card Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateCardRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.CreateCardResponse'
      security:
      - BearerAuth: []
      summary: "Создает новую карту\tпользователя"
      tags:
      - Card
  /cards/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет карту
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Удалить карту по ID
      tags:
      - Card
  /cards/{id}/cashback:
    post:
      consumes:
      - application/json
      description: Возвращает 201 в случае успеха
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: string
      - description: Create Cashbacks Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateCashbacksRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      security:
      - BearerAuth: []
      summary: Создание категорий для карты по ID
      tags:
      - Cashback
    put:
      consumes:
      - application/json
      description: Возвращает данные пользователя по указанному ID
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: string
      - description: Create Cashbacks Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateCashbacksRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Обновление категорий для карты по ID
      tags:
      - Cashback
  /categories:
    get:
      consumes:
      - application/json
      description: Возвращает список категорий для указанного банка
      parameters:
      - description: Bank ID
        in: query
        name: bank-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/category.Category'
            type: array
      summary: Получение списка категорий
      tags:
      - Category
  /email/login:
    post:
      consumes:
      - application/json
      description: Возвращает токен и время истечения при успешной аутентификации
      parameters:
      - description: Email and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.EmailLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Token'
      summary: Аутентификация пользователя по электронной почте
      tags:
      - Auth
  /families:
    get:
      consumes:
      - application/json
      description: Получение семьи по id из Authorization header или family id
      parameters:
      - description: Family ID
        in: query
        name: family-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/family.Family'
      security:
      - BearerAuth: []
      summary: Получение семьи
      tags:
      - Family
    post:
      consumes:
      - application/json
      description: Создание семьи
      parameters:
      - description: Create family Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateFamilyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/family.Family'
      security:
      - BearerAuth: []
      summary: Создание семьи
      tags:
      - Family
  /families/{family-id}:
    delete:
      consumes:
      - application/json
      description: Удаление семьи по id
      parameters:
      - description: Family ID
        in: path
        name: family-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Удаление семьи
      tags:
      - Family
  /families/{family-id}/invites:
    post:
      consumes:
      - application/json
      description: Создание приглашения в семью
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateFamilyInviteRequest'
      - description: Family ID
        in: path
        name: family-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
      security:
      - BearerAuth: []
      summary: Создание приглашения в семью
      tags:
      - Family-Invite
  /families/{family-id}/invites/{invite-id}:
    delete:
      consumes:
      - application/json
      description: Удаление приглашения, будет успешным только для лидера семьи
      parameters:
      - description: Family ID
        in: path
        name: family-id
        required: true
        type: string
      - description: Invite ID
        in: path
        name: invite-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Удаление приглашения
      tags:
      - Family-Invite
  /families/{family-id}/invites/accept:
    post:
      consumes:
      - application/json
      description: Принятие приглашения добавляет юзера в семью
      parameters:
      - description: Family ID
        in: path
        name: family-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Принятие приглашения
      tags:
      - Family-Invite
  /families/{family-id}/invites/decline:
    delete:
      consumes:
      - application/json
      description: Удаляет приглашение
      parameters:
      - description: Family ID
        in: path
        name: family-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Отклонение приглашения
      tags:
      - Family-Invite
  /families/{family-id}/members/{member-id}:
    delete:
      consumes:
      - application/json
      description: Удаление члена семьи по id
      parameters:
      - description: Family ID
        in: path
        name: family-id
        required: true
        type: string
      - description: Member ID
        in: path
        name: member-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Удаление члена семьи
      tags:
      - Family
  /families/invites:
    get:
      consumes:
      - application/json
      description: Получение приглашений либо по family-id либо по id из Authorization
        header
      parameters:
      - description: Family ID
        in: query
        name: family-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/invite.FamilyInvite'
            type: array
      security:
      - BearerAuth: []
      summary: Получение приглашений
      tags:
      - Family-Invite
  /users:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя и возвращает код
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Создание нового пользователя
      tags:
      - User
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Возвращает данные пользователя по указанному ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      summary: Получение пользователя по ID
      tags:
      - User
securityDefinitions:
  BearerAuth:
    description: Cashback-info API
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
